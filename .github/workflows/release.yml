name: Build .NET 9 Application

on:
    push:
        branches:
            - main
            - develop
    pull_request:
        branches:
            - main
            - develop
    workflow_dispatch:
      inputs:
        input:
          description: "Bond-Bend service"
          required: false
          default: "Bond-Bend"

permissions:
  contents: write
  packages: write
  id-token: write


env:
    NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
    DOTNET_NOLOGO: true


jobs:
  build:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
            fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
            dotnet-version: '9.0.x'

      - name: Print Folder Tree
        uses: jaywcjlove/github-action-folder-tree@main
        id: tree
        with:
            exclude: ".git|.github|.vscode|.idea|bin|obj|packages|node_modules|wwwroot"
            depth: 0
            path: ./

      - name: Setup Git Version
        uses: gittools/actions/gitversion/setup@v0.10.2
        with:
            versionSpec: '5.x'

      - name: Determine Version
        id: gitversion # step id used as a reference for output values
        uses: gittools/actions/gitversion/execute@v0.10.2
        with:
            useConfigFile: true

      - name: Version
        run: |
          echo Building ${{ steps.gitversion.outputs.SemVer }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore --no-incremental /p:Version=${{ steps.gitversion.outputs.AssemblySemVer }} /p:AssemblyVersion=${{ steps.gitversion.outputs.AssemblySemVer }} /p:InformationalVersion=${{ steps.gitversion.outputs.InformationalVersion }} --verbosity normal

      - name: Publish Server binaries
        run: | 
          dotnet publish -c Release -o publish-api --no-build src/BondBend.Aspire.ApiService
          dotnet publish -c Release -o publish-web --no-build src/BondBend.Aspire.Web

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }} 

      - name: Build Container Image
        run: |
          docker build -f src/BondBend.Aspire.ApiService/Dockerfile -t ghcr.io/renan-marcel/bond-bend.api:${{ steps.gitversion.outputs.SemVer }} ./publish-api
          docker build -f src/BondBend.Aspire.Web/Dockerfile -t ghcr.io/renan-marcel/bond-bend.web:${{ steps.gitversion.outputs.SemVer }} ./publish-web

      - name: Publish Container Image
        run: |
          docker push ghcr.io/renan-marcel/bond-bend.api:${{ steps.gitversion.outputs.SemVer }}
          docker push ghcr.io/renan-marcel/bond-bend.web:${{ steps.gitversion.outputs.SemVer }}

      - name: Create Release
        uses: actions/github-script@v6
        with:
          script: |
            let isPrerelease = false;

            if (context.ref.startsWith('refs/heads/feature/')) {
              isPrerelease = true;
            }

            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.gitversion.outputs.SemVer }}',
              name: 'Release ${{ steps.gitversion.outputs.SemVer }}',
              draft: false,
              prerelease: isPrerelease,
              generate_release_notes: true
            })
